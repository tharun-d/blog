// Code generated by mockery. DO NOT EDIT.

package mocks

import (
	mock "github.com/stretchr/testify/mock"
	models "github.com/tharun-d/blog/models"
)

// IRepository is an autogenerated mock type for the IRepository type
type IRepository struct {
	mock.Mock
}

// GetAllBlogDetails provides a mock function with given fields:
func (_m *IRepository) GetAllBlogDetails() ([]models.Blog, error) {
	ret := _m.Called()

	var r0 []models.Blog
	var r1 error
	if rf, ok := ret.Get(0).(func() ([]models.Blog, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() []models.Blog); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]models.Blog)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetBlogByID provides a mock function with given fields: id
func (_m *IRepository) GetBlogByID(id string) (models.Blog, error) {
	ret := _m.Called(id)

	var r0 models.Blog
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (models.Blog, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(string) models.Blog); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Get(0).(models.Blog)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveBlog provides a mock function with given fields: blogData
func (_m *IRepository) SaveBlog(blogData models.Blog) error {
	ret := _m.Called(blogData)

	var r0 error
	if rf, ok := ret.Get(0).(func(models.Blog) error); ok {
		r0 = rf(blogData)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

type mockConstructorTestingTNewIRepository interface {
	mock.TestingT
	Cleanup(func())
}

// NewIRepository creates a new instance of IRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
func NewIRepository(t mockConstructorTestingTNewIRepository) *IRepository {
	mock := &IRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
